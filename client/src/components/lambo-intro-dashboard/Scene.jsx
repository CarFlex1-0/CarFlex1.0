/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf 
Author: BlackCube (https://sketchfab.com/blackcube4)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/lamborghini-aventador-2263b49846d840618046538012720c59
Title: Lamborghini Aventador
*/

import React, { useEffect, useRef, forwardRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";

const Lamborghini = forwardRef((props, ref) => {
  const { nodes, materials } = useGLTF("/assets/models/scene.gltf");
  const groupRef = useRef();

  const textures = useTexture({
    Carbon_baseColor: "/assets/models/textures/Carbon_baseColor.jpeg",
    Carbon_metallicRoughness: "/assets/models/textures/Carbon_metallicRoughness.png",
    Carbon_normal: "/assets/models/textures/Carbon_normal.jpeg",
    Emblem_baseColor: "/assets/models/textures/Emblem_baseColor.png",
    Emblem_metallicRoughness: "/assets/models/textures/Emblem_metallicRoughness.png",
    Emblem_normal: "/assets/models/textures/Emblem_normal.png",
    Tires_2_baseColor: "/assets/models/textures/Tires_2_baseColor.jpeg",
    Brake_disk_baseColor: "/assets/models/textures/Brake_disk_baseColor.png",
  });

  useEffect(() => {
    Object.entries(materials).forEach(([name, material]) => {
      if (name === "Carbon") {
        material.map = textures.Carbon_baseColor;
        material.metalnessMap = material.roughnessMap = textures.Carbon_metallicRoughness;
        material.normalMap = textures.Carbon_normal;
      } else if (name === "Emblem") {
        material.map = textures.Emblem_baseColor;
        material.metalnessMap = material.roughnessMap = textures.Emblem_metallicRoughness;
        material.normalMap = textures.Emblem_normal;
      } else if (name === "Tires_2") {
        material.map = textures.Tires_2_baseColor;
      } else if (name === "Brake_disk") {
        material.map = textures.Brake_disk_baseColor;
      }

      if (material.map) material.map.encoding = THREE.sRGBEncoding;
      material.needsUpdate = true;
    });
  }, [materials, textures]);

  return (
    <group ref={ref} {...props}>
      <group ref={groupRef} dispose={null}>
        {/* Lamborghini model */}
        <group position={[0.002, 0.098, -0.012]} scale={0.001}>
          <mesh geometry={nodes.Object_4.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_5.geometry} material={materials.Dark_Metal} />
          <mesh geometry={nodes.Object_6.geometry} material={materials.Chrome} />
          <mesh geometry={nodes.Object_7.geometry} material={materials.Red_Lights} />
          <mesh geometry={nodes.Object_8.geometry} material={materials.Orange_Lights} />
          <mesh geometry={nodes.Object_9.geometry} material={materials.Aluminum} />
        </group>
        <group scale={0.001}>
          <mesh geometry={nodes.Object_13.geometry} material={materials.Body} />
          <mesh geometry={nodes.Object_14.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_15.geometry} material={materials.Aluminum} />
        </group>
        <group position={[0, 1.098, -0.616]} scale={0.001}>
          <mesh geometry={nodes.Object_17.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_18.geometry} material={materials.Dark_Metal} />
          <mesh geometry={nodes.Object_19.geometry} material={materials.Undercarriage} />
        </group>
        <group scale={0.001}>
          <mesh geometry={nodes.Object_35.geometry} material={materials.Body} />
          <mesh geometry={nodes.Object_36.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_37.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_38.geometry} material={materials.Dark_Metal} />
          <mesh geometry={nodes.Object_39.geometry} material={materials.Chrome} />
          <mesh geometry={nodes.Object_40.geometry} material={materials.Window_Glass} />
          <mesh geometry={nodes.Object_41.geometry} material={materials.Glass_Lights} />
          <mesh geometry={nodes.Object_42.geometry} material={materials.Undercarriage} />
          <mesh geometry={nodes.Object_43.geometry} material={materials.Aluminum} />
        </group>
        <group position={[0, 0.103, -0.006]} scale={0.001}>
          <mesh geometry={nodes.Object_49.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_50.geometry} material={materials.Chrome} />
          <mesh geometry={nodes.Object_51.geometry} material={materials.Front_Light_Lens} />
          <mesh geometry={nodes.Object_52.geometry} material={materials.Glass_Lights} />
          <mesh geometry={nodes.Object_53.geometry} material={materials.Front_Light} />
        </group>
        <group position={[0, -0.043, 0]} scale={1.494}>
          <mesh geometry={nodes.Object_59.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_60.geometry} material={materials.Hubcap} />
          <mesh geometry={nodes.Object_61.geometry} material={materials.Wheel_Screw} />
          <mesh geometry={nodes.Object_62.geometry} material={materials.Wheel_Screw} />
        </group>
        <group position={[0, -0.043, 0]} scale={1.494}>
          <mesh geometry={nodes.Object_64.geometry} material={materials.Tires} />
          <mesh geometry={nodes.Object_65.geometry} material={materials.Tires} />
          <mesh geometry={nodes.Object_66.geometry} material={materials.Tires} />
          <mesh geometry={nodes.Object_67.geometry} material={materials.Tires} />
          <mesh geometry={nodes.Object_68.geometry} material={materials.Tires_2} />
        </group>
        <group position={[0, -0.043, 0]} scale={1.494}>
          <mesh geometry={nodes.Object_70.geometry} material={materials.Carbon} />
          <mesh geometry={nodes.Object_71.geometry} material={materials.Brake_2} />
          <mesh geometry={nodes.Object_72.geometry} material={materials.Brake_wire} />
          <mesh geometry={nodes.Object_73.geometry} material={materials.Body} />
        </group>
        <mesh geometry={nodes.Object_11.geometry} material={materials.Glass_Lights} position={[0.002, 0.098, -0.012]} scale={0.001} />
        <mesh geometry={nodes.Object_21.geometry} material={materials.Carbon} position={[0, 0.755, 1.324]} scale={0.001} />
        <mesh geometry={nodes.Object_23.geometry} material={materials.Undercarriage} position={[0, 0.103, -0.007]} scale={0.001} />
        <mesh geometry={nodes.Object_25.geometry} material={materials.Dark_Metal} rotation={[Math.PI / 2, 0, Math.PI]} />
        <mesh geometry={nodes.Object_27.geometry} material={materials.Carbon} rotation={[Math.PI / 2, 0, Math.PI]} />
        <mesh geometry={nodes.Object_29.geometry} material={materials.Exhaust} position={[0, 0.914, 0]} />
        <mesh geometry={nodes.Object_31.geometry} material={materials.Carbon} rotation={[Math.PI / 2, 0, 0]} />
        <mesh geometry={nodes.Object_33.geometry} material={materials.Gold} scale={0.001} />
        <mesh geometry={nodes.Object_45.geometry} material={materials.Emblem} position={[0, -0.003, 0]} scale={0.001} />
        <mesh geometry={nodes.Object_47.geometry} material={materials.Mirror} scale={0.001} />
        <mesh geometry={nodes.Object_55.geometry} material={materials.Glass_Lights} position={[0, 0.103, -0.006]} scale={0.001} />
        <mesh geometry={nodes.Object_57.geometry} material={materials.Carbon} rotation={[Math.PI / 2, 0, 0]} />
        <mesh geometry={nodes.Object_75.geometry} material={materials.Brake_disk} position={[0, -0.043, 0]} scale={0.164} />
        <mesh geometry={nodes.Object_77.geometry} material={materials.Window_Glass} scale={0.001} />
        <mesh geometry={nodes.Object_79.geometry} material={materials.Window_Glass} scale={0.001} />
        <mesh geometry={nodes.Object_81.geometry} material={materials.Window_Glass} scale={0.001} />
        <mesh geometry={nodes.Object_83.geometry} material={materials.Window_Glass} position={[0, 1.098, -0.616]} scale={0.001} />
      </group>
    </group>
  );
});

export default Lamborghini;

useGLTF.preload("/assets/models/scene.gltf");
